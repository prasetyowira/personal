---
import { getLocalizedUrl, useTranslations } from '@utils/i18n';
import LanguagePicker from './LanguagePicker.astro';

interface Props {
  locale: 'en' | 'ja';
}

const { locale } = Astro.props;
const t = useTranslations(locale);
const currentPath = Astro.url.pathname;

const navItems = [
  { label: t('nav.home'), path: getLocalizedUrl(locale, '/') },
  { label: t('nav.projects'), path: getLocalizedUrl(locale, '/projects') },
  { label: t('nav.blog'), path: getLocalizedUrl(locale, '/blog') },
  { label: t('nav.about'), path: getLocalizedUrl(locale, '/about') },
  { label: t('nav.contact'), path: getLocalizedUrl(locale, '/contact') },
];
---

<div class="terminal-navbar">
  <div class="container-custom py-3">
    <nav class="flex flex-wrap items-center justify-between">
      <div class="terminal-prompt flex items-center">
        <span class="text-[--accent-green]">wira@portfolio</span>
        <span class="text-[--text-secondary]">:</span>
        <span class="text-[--accent-blue]">~</span>
        <span class="text-[--text-secondary]">$</span>
        <span class="typing-animation ml-2">{t('nav.welcome')}</span>
      </div>
      
      <div class="flex items-center lg:hidden">
        <button id="mobile-menu-button" aria-label="Toggle menu" class="p-2 rounded-md text-[--text-secondary] hover:text-[--text-primary] transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
      
      <div id="desktop-menu" class="hidden lg:flex items-center space-x-8">
        <ul class="flex space-x-6">
          {navItems.map(item => (
            <li>
              <a 
                href={item.path} 
                class={`text-sm font-medium hover:text-[--accent-green] transition-colors ${
                  currentPath === item.path
                    ? 'text-[--accent-green]'
                    : 'text-[--text-primary]'
                }`}
              >
                {`> ${item.label}`}
              </a>
            </li>
          ))}
        </ul>
        
        <div class="flex items-center space-x-4">
          <LanguagePicker locale={locale} />
        </div>
      </div>
      
      <!-- Mobile Menu (hidden by default) -->
      <div id="mobile-menu" class="hidden w-full mt-4 lg:hidden">
        <ul class="flex flex-col space-y-4 mb-4">
          {navItems.map(item => (
            <li>
              <a 
                href={item.path} 
                class={`block text-sm font-medium hover:text-[--accent-green] transition-colors ${
                  currentPath === item.path
                    ? 'text-[--accent-green]'
                    : 'text-[--text-primary]'
                }`}
              >
                {`> ${item.label}`}
              </a>
            </li>
          ))}
        </ul>
        
        <div class="flex items-center justify-between pt-4 border-t border-gray-700">
          <LanguagePicker locale={locale} />
        </div>
      </div>
    </nav>
  </div>
</div>

<script>
  // Toggle mobile menu
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>

<style>
  .terminal-navbar {
    @apply border-b;
    border-color: var(--border-color);
  }
  
  .terminal-prompt {
    font-family: 'JetBrains Mono', monospace;
  }
  
  .typing-animation {
    animation: cursor-blink 1.2s step-end infinite;
    position: relative;
  }
  
  .typing-animation::after {
    content: "";
    position: absolute;
    top: 0;
    right: -8px;
    width: 8px;
    height: 1.2em;
    background-color: var(--accent-green);
    animation: cursor-blink 1.2s step-end infinite;
  }
  
  @keyframes cursor-blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
</style> 